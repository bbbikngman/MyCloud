pipeline {
    agent any
    
    tools {
        maven 'Maven3'
        jdk 'JDK11'
    }
    
    environment {
        BACKEND_REPO = 'https://github.com/bbbikngman/MyCloud'
        BACKEND_BRANCH = 'main'
        BACKEND_DIR = 'FreeCloud/cloudServer'
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Clean workspace before checkout
                cleanWs()
                
                // Checkout the backend repository
                git branch: env.BACKEND_BRANCH,
                    url: env.BACKEND_REPO,
                    credentialsId: 'github-credentials'
                
                // Verify we're in the right directory and list contents
                sh 'pwd && ls -la'
            }
        }
        
        stage('Build Backend') {
            steps {
                dir(env.BACKEND_DIR) {
                    // Verify we're in the backend directory
                    sh 'pwd && ls -la'
                    
                    // Build the backend
                    sh '''
                        java -version
                        mvn -version
                        mvn clean package -DskipTests
                    '''
                }
            }
        }
        
        stage('Test Backend') {
            steps {
                dir(env.BACKEND_DIR) {
                    sh 'mvn test'
                }
            }
        }
        
        // Add deployment stage if needed
        stage('Deploy Backend') {
             steps {
                dir('FreeCloud/cloudServer') {
                    sh '''
                        # Copy the JAR
                        cp target/*.jar /opt/myapp/cloudServer.jar
                        
                        # Reload systemd
                        sudo systemctl daemon-reload
                        
                        # Restart the service
                        sudo systemctl restart myapp
                        
                        # Check status
                        sudo systemctl status myapp
                    '''
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
